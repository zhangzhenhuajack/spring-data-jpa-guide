server.port=8087
########### datasource
#spring.datasource.url=jdbc:mysql://localhost:3306/test?logger=Slf4JLogger&profileSQL=true
spring.datasource.url=jdbc:mysql://localhost:3306/test
spring.datasource.username=root
spring.datasource.password=E6kroWaR9F
###########
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=none
spring.datasource.hikari.pool-name=jack-test-db-pool

# 可以配置JPA的实现者的原始属性的配置，如：这里我们用的JPA的实现者是hibernate
# 那么hibernate里面的一些属性设置就可以通过如下方式实现，具体properties里面可以有哪些，本章的下面会有详细介绍，我们先知道这里可以设置
#spring.jpa.properties.hibernate.hbm2ddl.auto=none
#hibernate的persistence.xml文件有哪些，目前已经不推荐使用
#spring.jpa.mapping-resources=
#指定数据源的类型，如果不指定，Spring Boot加载Datasource的时候会根据URL的协议自己判断
#如： spring.datasource.url=jdbc:mysql://localhost:3306/test 上面可以明确的知道是mysql数据源，所以这个可以不需要指定；
#应用场景，当我们是通过代理的方式时候的可能通过datasource.url没办法判断数据源类型的时候，可以通过如下方式指定
spring.jpa.database=mysql
#是否在启动阶段根据实体初始化数据库的schema，默认false，当我们用内存数据库做测试的后可以打开很有用
spring.jpa.generate-ddl=false
#和spring.jpa.database用法差不多，指定数据库的平台，默认会自己发现；一般不需要指定
spring.jpa.database-platform=org.hibernate.dialect.MySQLInnoDBDialect
#是否在view层打开session，默认是true，其实大部分场景我们不需要打开，我们可以设置成false，
# 在22章节我们在详细讲解
spring.jpa.open-in-view=false
# 是否显示sql当执行JPA的数据库操作的时候，默认是false,在本地开发的时候我们可以把这个打开，有助于我们分析sql是不是我们预期的
# 在生产环境的时候建议给这个设置成false，改由logging.level.org.hibernate.SQL=DEBUG这个代替，这样的话日志默认是基于logback输出的，
# 而不是直接打印到控制台的，有利于增加traceid和线程ID等信息，便于分析
spring.jpa.show-sql=true

# 正如我们之前章节讲到的nameing的物理策略值有：org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy(默认)和org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.hibernate.naming.physical-strategy=
# ddl的生成策略，默认none；如果我们没有指定任何数据源的url，采用的是spring的集成数据源也就是内存数据源H2的时候，默认值是create-drop；
# 所有你会发现当我们每次用H2的时候什么都没做，就会自动帮我们创建表等，内存数据库和create-drop比较时候测试用的时候，非常方便；当我们是生产数据库的时候一定要设置成none;
spring.jpa.hibernate.ddl-auto=none
# 当我们的@Id配置成@GeneratedValue(strategy= GenerationType.AUTO)的时候是否采用hibernate的Id-generator-mappings(既：会默认帮我们创建一张表hibernate_sequence来存储和生成ID)，默认是true
spring.jpa.hibernate.use-new-id-generator-mappings=true

##开启hibernate statistics的信息，如session，连接等日志：
spring.jpa.properties.hibernate.generate_statistics=true
# 格式化 SQL
spring.jpa.properties.hibernate.format_sql=true
# 显示 SQL
spring.jpa.properties.hibernate.show_sql=true
# 添加 HQL 相关的注释信息
spring.jpa.properties.hibernate.use_sql_comments=true
# hbm2ddl的策略 validate, update, create, create-drop, none，建议配置成validate，
# 这样在我们启动项目的时候就知道生产数据库的表结构是否正确的了，而不用等到运行期间才发现问题。
spring.jpa.properties.hibernate.hbm2ddl.auto=validate
# 关联关系的时候取数据的深度，默认是3层，我们可以设置成2级，放在其他开发乱用，提高sql性能
spring.jpa.properties.hibernate.max_fetch_depth=2
# 批量fetch大小默认 -1
spring.jpa.properties.hibernate.default_batch_fetch_size= 100
# 事务完成之前是否进行flush操作，既同步到db里面去，默认是true
spring.jpa.properties.hibernate.transaction.flush_before_completion=true
# 事务结束之后是否关闭session，默认false
spring.jpa.properties.hibernate.transaction.auto_close_session=false
# 有的时候不止要批量查询，也会批量更新，默认batch size是15，我们可以根据实际情况自由调整，可以提高批量更新的效率；
spring.jpa.properties.hibernate.jdbc.batch_size=100
## repositories初始化的启动模式配置 bootstrap-mode
spring.data.jpa.repositories.bootstrap-mode=lazy

### 日志级别的灵活运用

## hibernate相关
# 显示sql的执行日志，如果开了这个,show_sql就可以不用了
logging.level.org.hibernate.SQL=debug
# hibernate id的生成日志
logging.level.org.hibernate.id=debug
# hibernate所有的操作都是PreparedStatement，把sql的执行参数显示出来
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# sql执行完提取的返回值
logging.level.org.hibernate.type.descriptor.sql=trace
# 请求参数
logging.level.org.hibernate.type=debug
# 缓存相关
logging.level.org.hibernate.cache=debug
# 统计hibernate的执行状态
logging.level.org.hibernate.stat=debug
# 查看所有的缓存操作
logging.level.org.hibernate.event.internal=trace
logging.level.org.springframework.cache=trace
# hibernate 的监控指标日志
logging.level.org.hibernate.engine.internal.StatisticalLoggingSessionEventListener=DEBUG

### 连接池的相关日志
## hikari连接池的状态日志，已经连接池是否完好 #连接池的日志效果：HikariCPPool - Pool stats (total=20, active=0, idle=20, waiting=0)
logging.level.com.zaxxer.hikari=TRACE
#开启 debuger可也看到 AvailableSettings里面的默认配置的值都有哪些如
# org.hibernate.cfg.Settings               : Statistics: enabled
# org.hibernate.cfg.Settings               : Default batch fetch size: -1
logging.level.org.hibernate.cfg=debug
#hikari数据的配置项日志
logging.level.com.zaxxer.hikari.HikariConfig=TRACE

### 查看事务相关的日志，事务获取，释放日志
logging.level.org.springframework.orm.jpa=DEBUG
logging.level.org.springframework.transaction=TRACE
logging.level.org.hibernate.engine.transaction.internal.TransactionImpl=DEBUG

### 分析connect 以及 orm和 data的处理过程更全的日志
logging.level.org.springframework.data=trace
logging.level.org.springframework.orm=trace
